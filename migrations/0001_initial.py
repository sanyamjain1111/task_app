# Generated by Django 5.1.2 on 2025-05-12 13:15

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(editable=False, max_length=15, unique=True)),
                ('assigned_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('deadline', models.DateField()),
                ('ticket_type', models.CharField(choices=[('Bug Fixing - Live', 'Bug Fixing - Live'), ('Bug Fixing - Staging', 'Bug Fixing - Staging'), ('Hardware', 'Hardware'), ('Issues', 'Issues'), ('New Engineering Requirement', 'New Engineering Requirement'), ('Others', 'Others'), ('Publishing', 'Publishing'), ('Research', 'Research'), ('Sales', 'Sales'), ('Service', 'Service'), ('Testing', 'Testing')], max_length=100)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], max_length=10)),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Stalled', 'Stalled'), ('On-Hold', 'On-Hold'), ('Cancelled', 'Cancelled')], default='Not Started', max_length=20)),
                ('subject', models.CharField(max_length=255)),
                ('request_details', models.TextField(blank=True, null=True)),
                ('attach_file', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('revised_completion_date', models.DateField(blank=True, null=True)),
                ('comments_by_assignee', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_type', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly')], max_length=10, null=True)),
                ('recurrence_count', models.IntegerField(default=1)),
                ('recurrence_duration', models.IntegerField(default=1)),
                ('is_recurred_task', models.BooleanField(default=False)),
                ('attachment_by_assignee', models.FileField(blank=True, null=True, upload_to='task_assignee_attachments/')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_assigned', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_received', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='task_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('status_updated', 'Status Updated'), ('priority_changed', 'Priority Changed'), ('deadline_revised', 'Deadline Revised'), ('comment_added', 'Comment Added'), ('assigned', 'Assigned'), ('reassigned', 'Reassigned')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_app.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='task_app.task')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Executive Management', 'Executive Management'), ('Departmental Manager', 'Departmental Manager'), ('Non-Management', 'Non-Management'), ('Task Management System Manager', 'Task Management System Manager')], max_length=50)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='task_app.department')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='task_app.userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
